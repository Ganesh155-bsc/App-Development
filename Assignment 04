import 'dart:async';

import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Assignment Four',
      theme: ThemeData(

        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Creating StopWatch'),
      debugShowCheckedModeBanner: false,
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});


  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {


  void _start() {
    setState(() {});
  }

  void _reset() {
    setState(() {});
  }

  void _stop() {
    setState(() {});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(

        backgroundColor: Theme
            .of(context)
            .colorScheme
            .inversePrimary,

        title: Text(widget.title),
      ),
      body: Center(
        // Center is a layout widget. It takes a single child and positions it
        // in the middle of the parent.
        child: Column(

          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            SizedBox(width: 100, child: TextField()),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [

                Padding(
                  padding: const EdgeInsets.all(10),
                  child: TextButton(onPressed: _start,
                    style: TextButton.styleFrom(
                        minimumSize: Size(double.minPositive, 40)),
                    child: Text('Start'),
                  ),
                ),
                TextButton(onPressed: _start, child: Text('Reset'),),
                Padding(
                  padding: const EdgeInsets.all(10),
                  child: TextButton(onPressed: _start, child: Text('Stop'),),
                ),
              ],
            ),
          ],
        ),
      ),
      // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    Stopwatch:Stopwatch();
    Timer.periodic(duration(Seconds:1), (Timer)){
      setState(() {
        int total_Misec=Stopwatch.elapsedMiliseconds;
        int Misec=total_Misec%1000;
        int sec=(total_Misec~/1000)%60;
        int minute=((total_Misec~/1000)~/60)%60;
        int minute=((total_Misec~/1000)~/60)~60;

        res="$Hour:$Min:$Sec:$Milisec:"
      });
    }
  }
}
