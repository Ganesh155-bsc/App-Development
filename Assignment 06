import 'dart:async';
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: CountdownTimer(),
    );
  }
}

class CountdownTimer extends StatefulWidget {
  const CountdownTimer({super.key});

  @override
  State<CountdownTimer> createState() => _CountdownTimerState();
}

class _CountdownTimerState extends State<CountdownTimer> {
  int _timeLeft = 10; // Countdown starts from 10 seconds
  Timer? _timer; // Timer variable
  bool _isRunning = false; // To check if the timer is running

  // Start the timer
  void _startTimer() {
    if (_isRunning) return; // If already running, do nothing

    _isRunning = true;
    _timer = Timer.periodic(Duration(seconds: 1), (timer) {
      setState(() {
        if (_timeLeft > 0) {
          _timeLeft--; // Reduce time
        } else {
          _timer?.cancel(); // Stop when time reaches 0
          _isRunning = false;
        }
      });
    });
  }

  // Stop the timer
  void _stopTimer() {
    _timer?.cancel();
    _isRunning = false;
  }

  // Reset the timer
  void _resetTimer() {
    _timer?.cancel();
    _isRunning = false;
    setState(() {
      _timeLeft = 10;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Countdown Timer'),
        backgroundColor: Colors.black,
        foregroundColor: Colors.white,
        centerTitle: true,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          children: [
            Container(
              decoration: BoxDecoration(
                shape: BoxShape.circle,
                border: Border.all(width: 4)
              ),
              margin: EdgeInsets.all(24),width: 200,height: 200,
              child: Center(
                child:Text(
                  'Time Left: $_timeLeft',
                  style: TextStyle(fontSize: 30),
                ),
              ),
            ),

            SizedBox(height: 20),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                ElevatedButton(onPressed: _startTimer, child: Text('Start')),
                SizedBox(width: 10),
                ElevatedButton(onPressed: _stopTimer, child: Text('Stop')),
                SizedBox(width: 10),
                ElevatedButton(onPressed: _resetTimer, child: Text('Reset')),
              ],
            ),
          ],
        ),
      ),
    );
  }
}
