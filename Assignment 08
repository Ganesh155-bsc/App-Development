import 'package:flutter/material.dart';
import 'package:intl/intl.dart'; 
void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: CalculateTipCalculator(),
    );
  }
}

class CalculateTipCalculator extends StatefulWidget {
  const CalculateTipCalculator({super.key});

  @override
  State<CalculateTipCalculator> createState() =>
      _CalculateTipCalculatorState();
}

class _CalculateTipCalculatorState extends State<CalculateTipCalculator> {
  final TextEditingController _billController = TextEditingController();
  
  double _selectedTip = 0.1;
  
  double _tipAmount = 0.0;
  double _totalAmount = 0.0;
  
  final currencyFormatter = NumberFormat.currency(locale: 'en_IN', symbol: 'â‚¹');
  
  void calculateTip() {
    final billText = _billController.text;
    
    final double? bill = double.tryParse(billText);
    if (bill != null && bill >= 0) {
      setState(() {
        _tipAmount = bill * _selectedTip;
        _totalAmount = bill + _tipAmount;
      });
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please enter a valid bill amount.')),
      );
    }
  }
  void reset() {
    setState(() {
      _billController.clear();
      _selectedTip = 0.1;
      _tipAmount = 0.0;
      _totalAmount = 0.0;
    });
  }
  
  Widget _buildTipChip(double percent) {
    return ChoiceChip(
      label: Text('${(percent * 100).toInt()}%'),
      selected: _selectedTip == percent,
      onSelected: (bool selected) {
        setState(() {
          _selectedTip = percent;
        });
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Tip Calculator'),
        centerTitle: true,
        foregroundColor: Colors.white,
        backgroundColor: Colors.black,
      ),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          children: [
            SizedBox(
              width:320 ,
              child: TextField(
                controller: _billController,
                keyboardType: TextInputType.numberWithOptions(decimal: true),
                decoration: const InputDecoration(
                  labelText: 'Enter Bill Amount',
                  border: OutlineInputBorder(),
                  prefixIcon: Icon(Icons.currency_rupee),
                ),
              ),
            ),
            const SizedBox(height: 20),
            const Text(
              'Select Tip Percentage:',
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
            Wrap(
              spacing: 10,
              children: [
                _buildTipChip(0.05),
                _buildTipChip(0.1),
                _buildTipChip(0.15),
                _buildTipChip(0.2),
              ],
            ),
            const SizedBox(height: 20),
            
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                ElevatedButton(
                    onPressed: calculateTip, child: const Text('Calculate Tip')),
                ElevatedButton(onPressed: reset, child: const Text('Reset')),
              ],
            ),
            const SizedBox(height: 30),
            
            if (_tipAmount > 0)
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'Tip Amount: ${currencyFormatter.format(_tipAmount)}',
                    style: const TextStyle(fontSize: 18),
                  ),
                  Text(
                    'Total Amount: ${currencyFormatter.format(_totalAmount)}',
                    style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                  ),
                ],
              ),
          ],
        ),
      ),
    );
  }
}
