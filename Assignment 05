import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Vote Eligible',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Voter Eligibility'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  TextEditingController name=TextEditingController();
  TextEditingController age=TextEditingController();

  List <String> voterListElName=[];
  List <String> voterListElAge=[];

  List <String> voterListNElName=[];
  List <String> voterListNElAge=[];
  void addPerson() {
    setState(() {
      if(int.parse(age.text)>=18) {
        voterListElName.add(name.text);
        voterListElAge.add(age.text);
      }
      else
      {
        voterListNElName.add(name.text);
        voterListNElAge.add(age.text);
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
        centerTitle: true,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const Text(
                  'Name: ',
                ),
                SizedBox(width: 200,child: TextField(controller: name,),),
              ],
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const Text(
                  'Age:',
                ),
                SizedBox(width: 200,child: TextField(controller: age,),),
              ],
            ),
            Padding(
              padding: const EdgeInsets.all(50),
              child: TextButton(onPressed: addPerson, child: Text('UPDATE')),
            ),

            Padding(
              padding: const EdgeInsets.all(24.0),
              child: Text('Eligible Voter:-'),
            ),

            Expanded(
              child: ListView.builder(
                  itemCount: voterListElName.length,
                  itemBuilder: (context,i){
                    return ListTile(
                      title: Text("Name: ${voterListElName[i]}, Age: ${voterListElAge[i]}"),
                    );
                  }),
            ),
            Padding(
              padding: const EdgeInsets.all(24.0),
              child: Text('Non-Eligible Voter:-'),
            ),

            Expanded(
              child: ListView.builder(
                  itemCount: voterListNElName.length,
                  itemBuilder: (context,i){
                    return ListTile(
                      title: Text("Name: ${voterListNElName[i]}, Age: ${voterListNElAge[i]}"),
                    );
                  }),
            ),

            Text(
              "",
              style: Theme.of(context).textTheme.headlineMedium,
            ),
          ],
        ),
      ),

    );
  }
}
