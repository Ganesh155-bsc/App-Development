import 'package:flutter/material.dart';
void main() {
  runApp(const MyApp());
}
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: TempConversion(),
    );
  }
}
class TempConversion extends StatefulWidget {
  const TempConversion({super.key});

  @override
  State<TempConversion> createState() => _TempConversionState();
}
class _TempConversionState extends State<TempConversion> {
  final TextEditingController _controller = TextEditingController();
  String _fromUnit = 'Celsius';
  String _toUnit = 'Fahrenheit';
  String _result = '';

  final List<String> _units = ['Celsius', 'Fahrenheit', 'Kelvin'];

  // Conversion Logic
  void _conversion() {
    double input = double.tryParse(_controller.text) ?? 0;
    double output = 0;

    if (_fromUnit == _toUnit) {
      output = input;
    } else if (_fromUnit == 'Celsius') {
      if (_toUnit == 'Fahrenheit') {
        output = input * 9 / 5 + 32;
      } else if (_toUnit == 'Kelvin') {
        output = input + 273.15;
      }
    } else if (_fromUnit == 'Fahrenheit') {
      if (_toUnit == 'Celsius') {
        output = (input - 32) * 5 / 9;
      } else if (_toUnit == 'Kelvin') {
        output = (input - 32) * 5 / 9 + 273.15;
      }
    } else if (_fromUnit == 'Kelvin') {
      if (_toUnit == 'Celsius') {
        output = input - 273.15;
      } else if (_toUnit == 'Fahrenheit') {
        output = (input - 273.15) * 9 / 5 + 32;
      }
    }
    setState(() {
      _result = '$input $_fromUnit = ${output.toStringAsFixed(2)} $_toUnit';
    });
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        foregroundColor: Colors.white,
        backgroundColor: Colors.black,
        title: const Text('TempConversion'),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          children: <Widget>[
            SizedBox(
              width: 350,
              child: TextField(
                controller: _controller,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(
                    border: OutlineInputBorder(),
                    labelText: 'Enter Temperature'),
              ),
            ),
            const SizedBox(height: 20),
            Row(
              children: [
                Expanded(
                  child: Column(
                    children: [
                      const Text('From Unit'),
                      DropdownButton<String>(
                        value: _fromUnit,
                        items: _units.map((String value) {
                          return DropdownMenuItem(
                            value: value,
                            child: Text(value),
                          );
                        }).toList(),
                        onChanged: (String? newValue) {
                          setState(() {
                            _fromUnit = newValue!;
                          });
                        },
                      ),
                    ],
                  ),
                ),
                Expanded(
                  child: Column(
                    children: [
                      const Text('To Unit'),
                      DropdownButton<String>(
                        value: _toUnit,
                        items: _units.map((String value) {
                          return DropdownMenuItem(
                            value: value,
                            child: Text(value),
                          );
                        }).toList(),
                        onChanged: (String? newValue) {
                          setState(() {
                            _toUnit = newValue!;
                          });
                        },
                      ),
                    ],
                  ),
                ),
              ],
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: _conversion,
              child: const Text('Convert'),
            ),
            const SizedBox(height: 20),
            Text(
              _result,
              style: const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
          ],
        ),
      ),
    );
  }
}
